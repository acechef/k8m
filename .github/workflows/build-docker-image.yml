# This is a basic workflow to help you get started with Actions

name: build docker image

# Controls when the action will run.
on:
  push:
    branches:
      - main
  release:
    types: [created,published] # 表示在创建新的 Release 时触发

# Allows you to run this workflow manually from the Actions tab
  # 可以手动触发
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

env:
  DOCKERHUB_USERNAME: eryajf
  ALIHUB_URL: registry.cn-hangzhou.aliyuncs.com
  ALIHUB_USERNAME: eryajf
  IMAGE_REPONAME: k8m

jobs:
  buildx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
      with:
        version: latest
    - name: 使用 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        cache-dependency-path: 'ui/pnpm-lock.yaml'
    - name: 安装依赖
      run: |
        cd ui
        pnpm install
        pnpm build

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'
        cache-dependency-path: 'go.sum'

    - name: 安装依赖
      run: |
        apt install -y make wget
        wget https://github.com/upx/upx/releases/download/v5.0.0/upx-5.0.0-amd64_linux.tar.xz
        tar xf upx-5.0.0-amd64_linux.tar.xz && mv upx-5.0.0-amd64_linux /usr/local/bin/upx
        chmod +x /usr/local/bin/upx && make build-linux

    # - name: Inject slug/short variables
    #   uses: rlespinasse/github-slug-action@v4

    # - name: Get current date
    #   id: date
    #   run: echo "::set-output name=today::$(date +'%Y-%m-%d_%H-%M')"

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v2

    # - name: Set up Docker Buildx
    #   id: buildx
    #   uses: docker/setup-buildx-action@v2

    # - name: Available platforms
    #   run: echo ${{ steps.buildx.outputs.platforms }}

    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ env.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    # # 镜像推送到 阿里云仓库
    # - name: Login to the Ali Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ env.ALIHUB_URL }}
    #     username: ${{ env.ALIHUB_USERNAME }}
    #     password: ${{ secrets.ALIHUB_TOKEN }}

    # - name: Build and push
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     # 所需要的体系结构，可以在 Available platforms 步骤中获取所有的可用架构
    #     platforms: linux/arm64,linux/amd64
    #     # 镜像推送时间
    #     push: ${{ github.event_name != 'pull_request' }}
    #     # 给清单打上多个标签
    #     tags: |
    #       ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_REPONAME }}:latest
    #       ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_REPONAME }}:${{ steps.date.outputs.today }}
    #       ${{ env.ALIHUB_URL }}/${{ env.ALIHUB_USERNAME }}/${{ env.IMAGE_REPONAME }}:${{ env.GITHUB_REF_NAME }}
    #       ${{ env.ALIHUB_URL }}/${{ env.ALIHUB_USERNAME }}/${{ env.IMAGE_REPONAME }}:latest